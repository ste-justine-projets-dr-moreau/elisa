
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";



    bool? averageCobbComputed = (bool?)ViewBag.AverageCobbComputed;
    double? averageCobb = (double?)ViewBag.AverageCobb;

    bool descriptivesStatsComputed = (bool)ViewBag.DescriptivesStatsComputed;
    double? statMedian = (double?)ViewBag.StatMedian;
    double? statMean = (double?)ViewBag.StatMean;
    double? statMin = (double?)ViewBag.StatMin;
    double? statMax = (double?)ViewBag.StatMax;
    double? statStandardDeviation = (double?)ViewBag.StatStandardDeviation;
    double? statVariance = (double?)ViewBag.StatVariance;
}


<br />
<br />
<br />
<br />

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Analytique</h2>
        </div>
    </div>

    @{
        List<SelectListItem> diagnosisList = new List<SelectListItem>();
        List<SelectListItem> genderList = new List<SelectListItem>();
        List<SelectListItem> studyVariableList = new List<SelectListItem>();

        diagnosisList.Add(new SelectListItem() { Text = "SIA", Value = "1" });

        genderList.Add(new SelectListItem() { Text = "Homme", Value = "1" });
        genderList.Add(new SelectListItem() { Text = "Femme", Value = "2" });
        genderList.Add(new SelectListItem() { Text = "Homme et femme", Value = "3" });

        studyVariableList.Add(new SelectListItem() { Text = "Age", Value = "1" });
        studyVariableList.Add(new SelectListItem() { Text = "Angle de Cobb", Value = "2" });
    }

    @using (Html.BeginForm("AnalyzeData", "Analytique", FormMethod.Post))
    {

    <div class="row">
        <div class="col-md-2">Maladie</div>
        <div class="col-md-10">
            @Html.DropDownList("diagnosis", diagnosisList, "Choisir une maladie ...", null)
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Sexe</div>
        <div class="col-md-10">
            @Html.DropDownList("gender", genderList, "Choisir un sexe ...", null)
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Variable d'étude</div>
        <div class="col-md-10">
            @Html.DropDownList("studyVariable", studyVariableList, "Choisir une variable d'étude ...", null)
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Filtre</div>
        <div class="col-md-10">
            
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">&nbsp;</div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <input name="submitButton" type="submit" value="Générer" />
            <input name="submitButton" type="submit" value="Excel" />
        </div>
    </div>


    

        bool showStats = false;

        if (ViewBag.analyzeStatComputed != null)
        {
            showStats = (bool)ViewBag.analyzeStatComputed;
        }
    

    if (showStats)
    {
        <div class="row">&nbsp;</div>
        <div class="row">
            <div class="col-md-2">
                Taille
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatSampleSize
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Minimum
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatMin
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Maximum
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatMax
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Médian
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatMedian
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Moyenne
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatMean
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Écart-type
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatStandardDeviation
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Variance
            </div>
            <div class="col-md-10">
                @ViewBag.analyzeStatVariance
            </div>
        </div>
    }

    }
    <hr />

    <div class="row">
        <div class="col-md-2">Source de donnée</div>
        <div class="col-md-10">
            <select id="lst-datasource">
                <option>Choisir une source de donnée ...</option>
                <option value="2">Cobb</option>
                <option value="3">Participant</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Type d'opération</div>
        <div class="col-md-10">
            <select id="lst-operation">
                <option value="0">Choisir une opération ...</option>
                <option value="1">Comptage simple</option>
                <option value="2">Comptage par valeur</option>
                <option value="3">Étude</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Type de représentation</div>
        <div class="col-md-10">
            <select id="lst-chart-type">
                <option value="2">Pie chart</option>
                <option value="3">Bar chart</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Dimension</div>
        <div class="col-md-10">
            <select id="lst-dimension"></select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Filtre</div>
        <div class="col-md-10">
            <select id="lst-filter">
                <option value="0">Choisir un filtre ...</option>
                <option value="1">Exacte</option>
                <option value="2">Intervalle</option>
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <input id="filter-interval-begin" type="text" value="" />
            <input id="filter-interval-end" type="text" value="" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-2">Proprieté à étudier de la dimension</div>
        <div class="col-md-10">
            <select id="lst-properties"></select>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button id="btn-generate-chart">Générer</button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="dynamic-div"></div>
            <div id="dynamic-chart"></div>
        </div>  
    </div>

    <div>
        @using (Html.BeginForm("ComputeAverageCobb", "Analytique", FormMethod.Post))
        { 

        <div class="row">
            <div class="col-md-12">
                <h2>Moyenne Cobb</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                @Html.CheckBox("sexFilter")
                Sexe
            </div>bool showStats = false
            <div class="col-md-10">
                @{
                    var listSex = new List<SelectListItem>();
                    listSex.Add(new SelectListItem { Text = "Homme", Value = "1" });
                    listSex.Add(new SelectListItem { Text = "Femme", Value = "2" });
                }

                @Html.DropDownList("sex", listSex)
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                @Html.CheckBox("ageFilter")
                Age
            </div>
            <div class="col-md-10">
                @Html.Editor("ageBegin")
                @Html.Editor("ageEnd")
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button id="btn-generate-chart" type="submit">Générer moyenne Cobb</button>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">&nbsp;</div>
        </div>
        <div class="row">
            <div class="col-md-12">


                @if (averageCobbComputed.Value)
                {
                    <span>Moyenne Cobb: </span>
                    if (averageCobb.HasValue)
                    {
                        <span>@(averageCobb.Value)</span>
                    }
                    else
                    {
                        <span>Aucune valeur</span>
                    }
                }
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">&nbsp;</div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @if (averageCobbComputed.Value) { 
                    foreach (dynamic item in ViewBag.ParticipantCobbs) {
                        <span>@item.ToString()</span><br />
                    }
                }
            </div>
        </div>
        }
    </div>

    <div>
        @using (Html.BeginForm("ComputeDescriptivesStats", "Analytique", FormMethod.Post))
        {
        <div class="row">
            <div class="col-md-12">
                <h2>Statistiques descriptives</h2>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Source de donnée
            </div>
            <div class="col-md-10">
                <select id="lst-datasource-stats">
                    <option value="0">Choisir une source de donnée ...</option>
                    <option value="1">Participant</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                Donnée
            </div>
            <div class="col-md-10">
                <select id="lst-datasource-stats">
                    <option value="0">Choisir une donnée ...</option>
                    <option value="1">Âge</option>
                </select>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button id="btn-" type="submit">Générer statistiques descriptives</button>
            </div>
        </div>
        }

        <div class="row">
            <div class="col-md-12">&nbsp;</div>
        </div>

        @if (descriptivesStatsComputed)
        {
            <div class="row">
                <div class="col-md-2">
                    Minimum
                </div>
                <div class="col-md-10">
                    @statMin
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    Maximum
                </div>
                <div class="col-md-10">
                    @statMax
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    Médian
                </div>
                <div class="col-md-10">
                    @statMedian
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    Moyenne
                </div>
                <div class="col-md-10">
                    @statMean
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    Écart-type
                </div>
                <div class="col-md-10">
                    @statStandardDeviation
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    Variance
                </div>
                <div class="col-md-10">
                    @statVariance
                </div>
            </div>
        }
    </div>

</div>

<script>

    $(document).ready(function () {

        // TODOs
        // - Remove the array of dimensions
        // - Remove switch case (modularity, maintenability)
        //

        var data = [];
        var ndx = null;
        var datasource;
        var dimensions = [];
        var properties = [];
        var dsItemProperties = null;
        var dimensionOptions = $("#lst-dimension");
        var propertiesOptions = $("#lst-properties");
        var operationOptions = $("#lst-operation");
        var filterOptions = $("#lst-filter");

        var currentDimension = null;



        function setDatasource(ds) {

            datasource = ds;

            ndx = crossfilter(datasource);

            // Populer les ddl dimension et propriete ...
            var dsItemProperties = Object.keys(datasource[0]);

            dimensionOptions.empty();
            propertiesOptions.empty();

            $.each(dsItemProperties, function (index, value) {

                var option = $("<option />").val(value).text(value);
                dimensionOptions.append(option);
                propertiesOptions.append(option.clone());

            });
        }

        function retrieveTotal() {
            return ndx.groupAll().reduceCount().value();
        }

        function hideForSumOnly() {
            $("#lst-dimension").hide();
            $("#lst-chart-type").hide();
            $("#lst-properties").hide();
        }

        function showForNotSumOnly() {
            $("#lst-dimension").show();
            $("#lst-chart-type").show();
            $("#lst-properties").show();
        }


        $("#lst-datasource").on('change', function () {

            var datasourceSelected = $(this).val();

            switch (datasourceSelected) {
                case "1":
                    setDatasource(data);
                    break;
                case "2":
                    $.getJSON("@Url.Action("GetData2", "Analytique", null, Request.Url.Scheme)", function (data) {
                        setDatasource(data);
                    });
                    break;
                case "3":
                    $.getJSON("@Url.Action("GetData", "Analytique", null, Request.Url.Scheme)", function (data) {
                        setDatasource(data);
                    });
                    break;
                default:
                    setDatasource(data);
            }
        });

        $("#lst-operation").on('change', function () {
            var operationSelected = $(this).val();

            switch (operationSelected) {
                case "1":
                    hideForSumOnly();
                    break;
                default:
                    showForNotSumOnly();
            }

        });

        $("#btn-add-propertie").click(function () {

            alert("Hello  " + operationOptions.val() + " !!!");

            var selectedDimension = dimensions[0]; //To modify
            var selectedPropertie = propertiesOptions.val();
            var propertie = null;

                propertie = selectedDimension
                                .group()
                                .reduceSum(function (d) {
                                    return d[selectedPropertie];
                                });


            properties.push(propertie);
        });

        $("#btn-generate-chart").click(function () {

            var selectedOperation = operationOptions.val();
            if (selectedOperation == "1") {

                $("#dynamic-div").html(retrieveTotal());

            } else {

                var chartFunction = "";
                var chartTypeValue = $("#lst-chart-type").val();

                switch (chartTypeValue) {
                    case "1":
                        chartFunction = "lineChart";
                        break;
                    case "2":
                        chartFunction = "pieChart";
                        break;
                    case "3":
                        chartFunction = "barChart";
                    default:

                }

                //Current dimension
                var selectedDimension = dimensionOptions.val();
                currentDimension = ndx.dimension(function (d) { return d[selectedDimension]; });



                var dynamicChart = dc[chartFunction]("#dynamic-chart");

                //To make this cleaner
                var isSumByValue = operationOptions.val() == "2";
                if (isSumByValue) {
                    var propertie = currentDimension
                                        .group()
                                        .reduceSum(function (d) {
                                            return d.Number;
                                        });
                    properties.push(propertie);
                }



                dynamicChart
                    .width(1000).height(500)

                    .dimension(currentDimension)
                    .group(properties[0])

                //.x(d3.time.scale().domain([minDate, maxDate])) // obligatoire
                ;

                if (chartTypeValue == "3") {

                    dynamicChart
                        .x(d3.scale.ordinal())
                        .xUnits(dc.units.ordinal);

                }

                if (chartTypeValue == "2") {
                    console.log("pie chart !!");

                    dynamicChart
                        .innerRadius(30);
                }

                if (chartTypeValue == "1") {
                    console.log("line chart !!");

                    dynamicChart
                        .x(d3.scale.ordinal())
                        .xUnits(dc.units.ordinal);
                }


                // Clean this
                // We need to create a new dimension to filter.
                var isFilterByInterval = filterOptions.val() == "2";
                if (isFilterByInterval) {
                    alert("isFilterByInterval");
                    var begin = parseInt($("#filter-interval-begin").val()),
                        end = parseInt($("#filter-interval-end").val());
                    alert("begin " + begin);
                    alert("end " + end);

                    var selectedDimension = dimensionOptions.val();
                    var filterDimension = ndx.dimension(function (d) { return d[selectedDimension]; });

                    filterDimension.filter([begin, end]);
                }


                dc.renderAll();

                console.log(datasource);

            }

            
        });

    });

</script>

