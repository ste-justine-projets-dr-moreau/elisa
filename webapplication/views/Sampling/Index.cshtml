@using GridMvc.Html
@model IEnumerable<Clinic.BackEnd.Models.Sampling>




@section header {
    <h1>@Html.Label(Languages.Global.Sampling)</h1>
}


<hr />

<p style="text-align: right">

    @*<input type="button" title="create" value='@Languages.Global.Add' onclick="location.href='@Url.Action("create", "Sampling")' ;" class="btn btn-info pull-Right" />*@
</p>
@helper RenderActionColumn(int id, String status)
{
    <div class="pull-right">

            <input type="button" title="edit" value='@Languages.Global.Edit' onclick="location.href='@Url.Action("edit", "Sampling", new { ID = id })' ;" class="btn btn-info" />

    </div>
}

<div>
    @Html.Grid(Model).Columns(columns =>
    {

        //columns.Add(c => c.Id).Filterable(true).Sanitized(false).Encoded(false).SetWidth(10);
        columns.Add(c => c.Appointment.Participant_Id).Filterable(true).Titled(Html.DisplayNameFor(x => x.Appointment.Participant.Id).ToString()).SetWidth(10);
        columns.Add(c => c.Appointment.Participant.Family_Id).Filterable(true).Titled(Html.DisplayNameFor(x => x.Appointment.Participant.Family.Id).ToString()).SetWidth(10);
        columns.Add(c => c.BarCode).Titled(Html.DisplayNameFor(x => x.BarCode).ToString()).Filterable(true).SetWidth(10);
        columns.Add(c => c.SamplingType.Name).Titled(Html.DisplayNameFor(x => x.SamplingType.Name).ToString()).Filterable(true).SetWidth(10);
        columns.Add(c => c.Appointment.Date).Titled(Html.DisplayNameFor(x => x.Appointment.Date).ToString()).Filterable(true).Format("{0:yyyy/MM/dd}").SetWidth(10);
        columns.Add(c => c.Comment).Titled(Html.DisplayNameFor(x => x.Comment).ToString()).Filterable(true);
        columns.Add(c => c.SamplingStatu.Name).Titled(Html.DisplayNameFor(x => x.SamplingStatu.Name).ToString()).Filterable(true).SetWidth(10);
        columns.Add().Encoded(false).Sanitized(false).RenderValueAs(c => RenderActionColumn(c.Id, c.SamplingStatu.Name).ToHtmlString());

    }).WithPaging(10).Sortable(true).SetLanguage(Session["Language"].ToString())

</div>


